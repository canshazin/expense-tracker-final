      paypal.Buttons({
        // 3. Provide the order ID when PayPal asks for it
        createOrder: function() {
          return response.data.id;
        },
        // 4. This function runs when PayPal payment is successful
        onApprove: function(data, actions) {
          // 5. Capture the funds from the transaction
          return actions.order.capture().then(function(details) {
            // 6. Send the payment details to your server
            return axios.post(
              `${url}/purchase/premium-membership/paypal`,
              { 
                order_id: data.orderID,
                payment_id: details.id,
                status: details.status
              },
              {
                headers: { Authorization: localStorage.getItem("token") },
              }
            ).then(() => {
              // 7. Payment is complete, update your UI
              alert("Payment successful!");
            });
          });
        }
      }).click();



exports.add_expense = async (req, res, next) => {
  // const t = await sequelize.transaction()
  try {
    let msg = "";
    const expense = req.body;
    console.log("expense.........", expense);
    const expense_added = await Expense.create(
      {
        amount: expense.amount,
        category: expense.category,
        description: expense.description,
        userId: req.user.id,
      },
      
    );
    await User.increment(
      "total_expense",
      {
        by: expense.amount,
        where: { id: req.user.id },
      },
      
    );
    // await t.commit();
    msg = "expense added succefully";
    const id = expense_added.id;
    const response = { msg, id };
    res.json(response);
  } catch (err) {
    // if (t) {
    //   await t.rollback();
    // }
    console.error(err);
    res
      .status(500)
      .json({ error: "An error occurred while adding the expense" });
  }
};




      